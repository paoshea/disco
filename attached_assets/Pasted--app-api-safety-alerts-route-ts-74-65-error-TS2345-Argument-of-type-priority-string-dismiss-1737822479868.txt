

app/api/safety/alerts/route.ts:74:65 - error TS2345: Argument of type '{ priority: string; dismissed: boolean; resolved: boolean; description: string | null; message: string | null; updatedAt: string; dismissedAt: null; resolvedAt: null; location: { latitude: number; longitude: number; accuracy: number | null; timestamp: string; }; type: "emergency" | ... 1 more ... | "help"; contacts?...' is not assignable to parameter of type 'Omit<{ message: string | null; location: JsonValue; id: string; createdAt: Date; updatedAt: Date; resolved: boolean; dismissed: boolean; type: string; userId: string; priority: string; description: string | null; dismissedAt: Date | null; resolvedAt: Date | null; }, "id" | ... 1 more ... | "userId">'.
  Types of property 'updatedAt' are incompatible.
    Type 'string' is not assignable to type 'Date'.

74     const alert = await safetyService.createSafetyAlert(userId, alertData);
                                                                   ~~~~~~~~~

app/safety/page.tsx:18:5 - error TS2322: Type 'EmergencyContact[]' is not assignable to type 'string[]'.
  Type 'EmergencyContact' is not assignable to type 'string'.

18     emergencyContacts: [] as EmergencyContact[],
       ~~~~~~~~~~~~~~~~~

app/safety/page.tsx:24:60 - error TS2552: Cannot find name 'SafetySettingsNew'. Did you mean 'SafetySettings'?

24   const updateSafetySettings = async (newSettings: Partial<SafetySettingsNew>) => {
                                                              ~~~~~~~~~~~~~~~~~

app/safety/page.tsx:152:63 - error TS2339: Property 'firstName' does not exist on type '{ id: string; name: string; email: string; phoneNumber: string; }'.

152                           {contactData.name || `${contactData.firstName} ${contactData.lastName}`}
                                                                  ~~~~~~~~~

app/safety/page.tsx:152:88 - error TS2339: Property 'lastName' does not exist on type '{ id: string; name: string; email: string; phoneNumber: string; }'.

152                           {contactData.name || `${contactData.firstName} ${contactData.lastName}`}
                                                                                           ~~~~~~~~

app/safety/page.tsx:214:15 - error TS2322: Type 'string[]' is not assignable to type 'EmergencyContact[]'.
  Type 'string' is not assignable to type 'EmergencyContact'.

214               emergencyContacts: settings.emergencyContacts
                  ~~~~~~~~~~~~~~~~~

  src/types/safety.ts:257:3
    257   emergencyContacts: EmergencyContact[];
          ~~~~~~~~~~~~~~~~~
    The expected type comes from property 'emergencyContacts' which is declared here on type 'SafetySettingsNew'

app/safety/page.tsx:217:27 - error TS2345: Argument of type '(prev: SafetySettings) => { emergencyContacts: string[] | EmergencyContact[]; autoShareLocation?: boolean | undefined; meetupCheckins?: boolean | undefined; sosAlertEnabled: boolean; requireVerifiedMatch?: boolean | undefined; }' is not assignable to parameter of type 'SetStateAction<SafetySettings>'.
  Type '(prev: SafetySettings) => { emergencyContacts: string[] | EmergencyContact[]; autoShareLocation?: boolean | undefined; meetupCheckins?: boolean | undefined; sosAlertEnabled: boolean; requireVerifiedMatch?: boolean | undefined; }' is not assignable to type '(prevState: SafetySettings) => SafetySettings'.
    Call signature return types '{ emergencyContacts: string[] | EmergencyContact[]; autoShareLocation?: boolean | undefined; meetupCheckins?: boolean | undefined; sosAlertEnabled: boolean; requireVerifiedMatch?: boolean | undefined; }' and 'SafetySettings' are incompatible.
      The types of 'emergencyContacts' are incompatible between these types.
        Type 'string[] | EmergencyContact[]' is not assignable to type 'string[]'.
          Type 'EmergencyContact[]' is not assignable to type 'string[]'.

217               setSettings(prev => ({
                              ~~~~~~~~~~
218                 ...prev,
    ~~~~~~~~~~~~~~~~~~~~~~~~
... 
222                   : prev.emergencyContacts
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
223               }));
    ~~~~~~~~~~~~~~~~

app/safety/page.tsx:230:27 - error TS2345: Argument of type '(prev: SafetySettings) => { emergencyContacts: string[] | EmergencyContact[]; autoShareLocation?: boolean | undefined; meetupCheckins?: boolean | undefined; sosAlertEnabled: boolean; requireVerifiedMatch?: boolean | undefined; }' is not assignable to parameter of type 'SetStateAction<SafetySettings>'.
  Type '(prev: SafetySettings) => { emergencyContacts: string[] | EmergencyContact[]; autoShareLocation?: boolean | undefined; meetupCheckins?: boolean | undefined; sosAlertEnabled: boolean; requireVerifiedMatch?: boolean | undefined; }' is not assignable to type '(prevState: SafetySettings) => SafetySettings'.
    Call signature return types '{ emergencyContacts: string[] | EmergencyContact[]; autoShareLocation?: boolean | undefined; meetupCheckins?: boolean | undefined; sosAlertEnabled: boolean; requireVerifiedMatch?: boolean | undefined; }' and 'SafetySettings' are incompatible.
      The types of 'emergencyContacts' are incompatible between these types.
        Type 'string[] | EmergencyContact[]' is not assignable to type 'string[]'.
          Type 'EmergencyContact[]' is not assignable to type 'string[]'.

230               setSettings(prev => ({
                              ~~~~~~~~~~
231                 ...prev,
    ~~~~~~~~~~~~~~~~~~~~~~~~
... 
235                   : prev.emergencyContacts
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
236               }));
    ~~~~~~~~~~~~~~~~

src/components/safety/SafetyAlerts.tsx:15:19 - error TS2345: Argument of type '(alert: SafetyAlertType) => React.JSX.Element' is not assignable to parameter of type '(value: { message: string | null; location: JsonValue; id: string; createdAt: Date; updatedAt: Date; resolved: boolean; dismissed: boolean; type: string; userId: string; priority: string; description: string | null; dismissedAt: Date | null; resolvedAt: Date | null; }, index: number, array: { ...; }[]) => Element'.
  Types of parameters 'alert' and 'value' are incompatible.
    Type '{ message: string | null; location: JsonValue; id: string; createdAt: Date; updatedAt: Date; resolved: boolean; dismissed: boolean; type: string; userId: string; priority: string; description: string | null; dismissedAt: Date | null; resolvedAt: Date | null; }' is not assignable to type 'SafetyAlertType'.

 15       {alerts.map((alert: SafetyAlertType) => (
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 16         <SafetyAlertNotification
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
... 
 28         />
    ~~~~~~~~~~
 29       ))}
    ~~~~~~~

src/components/safety/SafetyAlerts.tsx:17:22 - error TS2339: Property 'id' does not exist on type 'SafetyAlertType'.
  Property 'id' does not exist on type '"location"'.

17           key={alert.id}
                        ~~

src/components/safety/SafetyAlerts.tsx:19:13 - error TS2698: Spread types may only be created from object types.

19             ...alert,
               ~~~~~~~~

src/components/safety/SafetyAlerts.tsx:20:29 - error TS2339: Property 'location' does not exist on type 'SafetyAlertType'.
  Property 'location' does not exist on type '"location"'.

20             location: alert.location ? {
                               ~~~~~~~~

src/components/safety/SafetyAlerts.tsx:21:24 - error TS2339: Property 'location' does not exist on type 'SafetyAlertType'.
  Property 'location' does not exist on type '"location"'.

21               ...alert.location,
                          ~~~~~~~~

src/components/safety/SafetyAlerts.tsx:22:39 - error TS2339: Property 'location' does not exist on type 'SafetyAlertType'.
  Property 'location' does not exist on type '"location"'.

22               timestamp: typeof alert.location.timestamp === 'string'
                                         ~~~~~~~~

src/components/safety/SafetyAlerts.tsx:23:25 - error TS2339: Property 'location' does not exist on type 'SafetyAlertType'.
  Property 'location' does not exist on type '"location"'.

23                 ? alert.location.timestamp
                           ~~~~~~~~

src/components/safety/SafetyAlerts.tsx:27:47 - error TS2339: Property 'id' does not exist on type 'SafetyAlertType'.
  Property 'id' does not exist on type '"location"'.

27           onDismiss={() => dismissAlert(alert.id)}
                                                 ~~

src/components/safety/SafetyCenter.tsx:31:34 - error TS2552: Cannot find name 'SafetyAlertType'. Did you mean 'SafetyAlertNew'?

31             type: 'emergency' as SafetyAlertType,
                                    ~~~~~~~~~~~~~~~

src/components/safety/SafetyCenter.tsx:33:13 - error TS2345: Argument of type '{ type: SafetyAlertType; description: string; status: string; priority: string; location: { latitude: number; longitude: number; accuracy: number | undefined; timestamp: string; } | undefined; message: string; dismissed: false; resolved: false; }' is not assignable to parameter of type 'Partial<{ message: string | null; location: JsonValue; id: string; createdAt: Date; updatedAt: Date; resolved: boolean; dismissed: boolean; type: string; userId: string; priority: string; description: string | null; dismissedAt: Date | null; resolvedAt: Date | null; }>'.
  Object literal may only specify known properties, and 'status' does not exist in type 'Partial<{ message: string | null; location: JsonValue; id: string; createdAt: Date; updatedAt: Date; resolved: boolean; dismissed: boolean; type: string; userId: string; priority: string; description: string | null; dismissedAt: Date | null; resolvedAt: Date | null; }>'.

33             status: 'active',
               ~~~~~~

src/components/safety/SafetyCenter.tsx:100:17 - error TS2322: Type '{ status: "resolved" | "dismissed" | "active"; message: string | null; location: JsonValue; id: string; createdAt: Date; updatedAt: Date; resolved: boolean; dismissed: boolean; ... 5 more ...; resolvedAt: Date | null; }' is not assignable to type 'SafetyAlertNew'.
  Types of property 'type' are incompatible.
    Type 'string' is not assignable to type 'SafetyAlertType'.

100                 alert={{
                    ~~~~~

  src/components/safety/SafetyAlertNotification.tsx:12:3
    12   alert: SafetyAlertNew;
         ~~~~~
    The expected type comes from property 'alert' which is declared here on type 'IntrinsicAttributes & SafetyAlertNotificationProps'

src/contexts/SafetyAlertContext.tsx:66:36 - error TS2339: Property 'latitude' does not exist on type 'string | number | true | JsonObject | JsonArray'.
  Property 'latitude' does not exist on type 'string'.

66           latitude: alert.location.latitude,
                                      ~~~~~~~~

src/contexts/SafetyAlertContext.tsx:67:37 - error TS2339: Property 'longitude' does not exist on type 'string | number | true | JsonObject | JsonArray'.
  Property 'longitude' does not exist on type 'string'.

67           longitude: alert.location.longitude,
                                       ~~~~~~~~~

src/contexts/SafetyAlertContext.tsx:68:36 - error TS2339: Property 'accuracy' does not exist on type 'string | number | true | JsonObject | JsonArray'.
  Property 'accuracy' does not exist on type 'string'.

68           accuracy: alert.location.accuracy,
                                      ~~~~~~~~

src/contexts/SafetyAlertContext.tsx:69:37 - error TS2339: Property 'timestamp' does not exist on type 'string | number | true | JsonObject | JsonArray'.
  Property 'timestamp' does not exist on type 'string'.

69           timestamp: alert.location.timestamp instanceof Date
                                       ~~~~~~~~~

src/contexts/SafetyAlertContext.tsx:70:30 - error TS2339: Property 'timestamp' does not exist on type 'string | number | true | JsonObject | JsonArray'.
  Property 'timestamp' does not exist on type 'string'.

70             ? alert.location.timestamp.toISOString()
                                ~~~~~~~~~

src/contexts/SafetyAlertContext.tsx:83:48 - error TS2345: Argument of type '{ message: string | null; location: string | number | boolean | JsonObject | JsonArray | { latitude: any; longitude: any; accuracy: any; timestamp: any; } | null; ... 10 more ...; resolvedAt?: Date | ... 1 more ... | undefined; }' is not assignable to parameter of type 'Omit<{ message: string | null; location: JsonValue; id: string; createdAt: Date; updatedAt: Date; resolved: boolean; dismissed: boolean; type: string; userId: string; priority: string; description: string | null; dismissedAt: Date | null; resolvedAt: Date | null; }, "id" | "createdAt">'.
  Types of property 'updatedAt' are incompatible.
    Type 'Date | undefined' is not assignable to type 'Date'.
      Type 'undefined' is not assignable to type 'Date'.

83       const newAlert = await createSafetyAlert(fullAlert);
                                                  ~~~~~~~~~

src/hooks/useAuth.ts:148:19 - error TS2339: Property 'token' does not exist on type 'unknown'.

148           const { token, refreshToken } = response.data;
                      ~~~~~

src/hooks/useAuth.ts:148:26 - error TS2339: Property 'refreshToken' does not exist on type 'unknown'.

148           const { token, refreshToken } = response.data;
                             ~~~~~~~~~~~~

src/lib/api/client.ts:2:8 - error TS2305: Module '"axios"' has no exported member 'AxiosInstance'.

2   type AxiosInstance,
         ~~~~~~~~~~~~~

src/lib/api/client.ts:3:8 - error TS2305: Module '"axios"' has no exported member 'InternalAxiosRequestConfig'.

3   type InternalAxiosRequestConfig,
         ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/lib/api/client.ts:4:8 - error TS2305: Module '"axios"' has no exported member 'AxiosResponse'.

4   type AxiosResponse,
         ~~~~~~~~~~~~~

src/lib/api/client.ts:5:8 - error TS2305: Module '"axios"' has no exported member 'AxiosError'.

5   type AxiosError,
         ~~~~~~~~~~

src/services/api/api.client.ts:2:8 - error TS2305: Module '"axios"' has no exported member 'AxiosError'.

2   type AxiosError,
         ~~~~~~~~~~

src/services/api/api.client.ts:3:8 - error TS2305: Module '"axios"' has no exported member 'InternalAxiosRequestConfig'.

3   type InternalAxiosRequestConfig,
         ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/api/api.client.ts:4:8 - error TS2305: Module '"axios"' has no exported member 'AxiosResponse'.

4   type AxiosResponse,
         ~~~~~~~~~~~~~

src/services/api/api.client.ts:83:25 - error TS2339: Property 'headers' does not exist on type 'ExtendedInternalAxiosRequestConfig'.

83         originalRequest.headers.Authorization = `Bearer ${token}`;
                           ~~~~~~~

src/services/api/api.client.ts:86:26 - error TS2345: Argument of type 'ExtendedInternalAxiosRequestConfig' is not assignable to parameter of type 'AxiosXHRConfig<unknown>'.
  Property 'url' is missing in type 'ExtendedInternalAxiosRequestConfig' but required in type 'AxiosXHRConfig<unknown>'.

86         return apiClient(originalRequest);
                            ~~~~~~~~~~~~~~~

  node_modules/@types/axios/index.d.ts:119:9
    119         url: string;
                ~~~
    'url' is declared here.

src/services/api/api.ts:2:3 - error TS2305: Module '"axios"' has no exported member 'AxiosInstance'.

2   AxiosInstance,
    ~~~~~~~~~~~~~

src/services/api/api.ts:3:3 - error TS2305: Module '"axios"' has no exported member 'AxiosRequestConfig'.

3   AxiosRequestConfig,
    ~~~~~~~~~~~~~~~~~~

src/services/api/api.ts:4:3 - error TS2305: Module '"axios"' has no exported member 'AxiosResponse'.

4   AxiosResponse,
    ~~~~~~~~~~~~~

src/services/api/api.ts:5:3 - error TS2305: Module '"axios"' has no exported member 'AxiosError'.

5   AxiosError,
    ~~~~~~~~~~

src/services/api/api.ts:49:7 - error TS7006: Parameter 'config' implicitly has an 'any' type.

49       config => {
         ~~~~~~

src/services/api/api.ts:56:7 - error TS7006: Parameter 'error' implicitly has an 'any' type.

56       error => {
         ~~~~~

src/services/api/api.ts:62:7 - error TS7006: Parameter 'response' implicitly has an 'any' type.

62       response => {
         ~~~~~~~~

src/services/api/api.ts:130:15 - error TS2339: Property 'isAxiosError' does not exist on type 'AxiosStatic'.

130     if (axios.isAxiosError(error)) {
                  ~~~~~~~~~~~~

src/services/api/api.ts:131:24 - error TS18046: 'error' is of type 'unknown'.

131       const response = error.response?.data as ApiErrorResponse | undefined;
                           ~~~~~

src/services/api/api.ts:135:17 - error TS18046: 'error' is of type 'unknown'.

135         status: error.response?.status ?? 500,
                    ~~~~~

src/services/api/auth.service.ts:3:17 - error TS2305: Module '"axios"' has no exported member 'AxiosError'.

3 import axios, { AxiosError } from 'axios';
                  ~~~~~~~~~~

src/services/api/auth.service.ts:179:18 - error TS2339: Property 'isAxiosError' does not exist on type 'AxiosStatic'.

179     return axios.isAxiosError(error);
                     ~~~~~~~~~~~~

src/services/api/match.service.ts:112:27 - error TS2558: Expected 1 type arguments, but got 2.

112       await apiClient.put<ApiResponse<void>, Partial<MatchPreferences>>(
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/api/user.service.ts:1:10 - error TS2305: Module '"axios"' has no exported member 'AxiosResponse'.

1 import { AxiosResponse } from 'axios';
           ~~~~~~~~~~~~~


Found 50 errors in 12 files.

Errors  Files
     1  app/api/safety/alerts/route.ts:74
     7  app/safety/page.tsx:18
     8  src/components/safety/SafetyAlerts.tsx:15
     3  src/components/safety/SafetyCenter.tsx:31
     6  src/contexts/SafetyAlertContext.tsx:66
     2  src/hooks/useAuth.ts:148
     4  src/lib/api/client.ts:2
     5  src/services/api/api.client.ts:2
    10  src/services/api/api.ts:2
     2  src/services/api/auth.service.ts:3
     1  src/services/api/match.service.ts:112
     1  src/services/api/user.service.ts:1
