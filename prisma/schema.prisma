// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String           @id @default(uuid())
  email             String           @unique
  password          String
  firstName         String
  lastName          String
  emailVerified     Boolean          @default(false)
  verificationToken String?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  passwordResets    PasswordReset[]
  emergencyContacts EmergencyContact[]
  safetyChecks      SafetyCheck[]
}

model PasswordReset {
  id        String    @id @default(uuid())
  token     String    @unique
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  used      Boolean   @default(false)
  expiresAt DateTime
  createdAt DateTime  @default(now())
}

model EmergencyContact {
  id          String   @id @default(uuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  firstName   String
  lastName    String
  email       String?
  phoneNumber String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model SafetyCheck {
  id           String    @id @default(uuid())
  userId       String
  user         User      @relation(fields: [userId], references: [id])
  type         String    // e.g., 'custom', 'meetup', etc.
  status       String    // 'pending', 'completed', 'missed'
  scheduledFor DateTime
  location     Json?     // Stores latitude, longitude, accuracy
  description  String?
  completedAt  DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}
